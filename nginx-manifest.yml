apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-app-mesh
  name: meshery-app-mesh
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-app-mesh
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-app-mesh
    spec:
      serviceAccount: meshery-server
      containers:
      - image: layer5/meshery-app-mesh:stable-latest
        imagePullPolicy: Always
        name: meshery-app-mesh
        ports:
        - containerPort: 10005
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-app-mesh
  name: meshery-app-mesh
spec:
  ports:
  - name: "10005"
    port: 10005
    targetPort: 10005
  selector:
    io.kompose.service: meshery-app-mesh
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-cilium
  name: meshery-cilium
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-cilium
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-cilium
    spec:
      serviceAccount: meshery-server
      containers:
      - image: layer5/meshery-cilium:stable-latest
        imagePullPolicy: Always
        name: meshery-cilium
        ports:
        - containerPort: 10012
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-cilium
  name: meshery-cilium
spec:
  ports:
  - name: "10012"
    port: 10012
    targetPort: 10012
  selector:
    io.kompose.service: meshery-cilium
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-consul
  name: meshery-consul
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-consul
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-consul
    spec:
      serviceAccount: meshery-server
      containers:
      - image: layer5/meshery-consul:stable-latest
        imagePullPolicy: Always
        name: meshery-consul
        ports:
        - containerPort: 10002
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  # creationTimestamp: null
  labels:
    io.kompose.service: meshery-consul
  name: meshery-consul
spec:
  ports:
  - name: "10002"
    port: 10002
    targetPort: 10002
  selector:
    io.kompose.service: meshery-consul
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery
  name: meshery
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery
    spec:
      serviceAccountName: meshery-server
      containers:
      - env:
        - name: EVENT
          value: mesheryLocal
        - name: PROVIDER_BASE_URLS
          value: https://cloud.layer5.io
        - name: ADAPTER_URLS
          value: meshery-istio:10000 meshery-linkerd:10001 meshery-consul:10002 meshery-nsm:10004 meshery-app-mesh:10005 meshery-kuma:10007 meshery-nginx-sm:10010
        image: layer5/meshery:stable-latest
        imagePullPolicy: Always
        name: meshery
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-istio
  name: meshery-istio
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-istio
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-istio
    spec:
      serviceAccount: meshery-server
      containers:
      - image: layer5/meshery-istio:stable-latest
        imagePullPolicy: Always
        name: meshery-istio
        ports:
        - containerPort: 10000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-istio
  name: meshery-istio
spec:
  ports:
  - name: "10000"
    port: 10000
    targetPort: 10000
  selector:
    io.kompose.service: meshery-istio
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-kuma
  name: meshery-kuma
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-kuma
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-kuma
    spec:
      serviceAccount: meshery-server
      containers:
      - image: layer5/meshery-kuma:stable-latest
        imagePullPolicy: Always
        name: meshery-kuma
        ports:
        - containerPort: 10007
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-kuma
  name: meshery-kuma
spec:
  ports:
    - name: "10007"
      port: 10007
      targetPort: 10007
  selector:
    io.kompose.service: meshery-kuma
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-linkerd
  name: meshery-linkerd
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-linkerd
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-linkerd
    spec:
      serviceAccount: meshery-server
      containers:
      - image: layer5/meshery-linkerd:stable-latest
        imagePullPolicy: Always
        name: meshery-linkerd
        ports:
        - containerPort: 10001
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-linkerd
  name: meshery-linkerd
spec:
  ports:
  - name: "10001"
    port: 10001
    targetPort: 10001
  selector:
    io.kompose.service: meshery-linkerd
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-nginx-sm
  name: meshery-nginx-sm
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-nginx-sm
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-nginx-sm
    spec:
      serviceAccount: meshery-server
      containers:
      - image: layer5/meshery-nginx-sm:stable-latest
        imagePullPolicy: Always
        name: meshery-nginx-sm
        ports:
        - containerPort: 10010
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-nginx-sm
  name: meshery-nginx-sm
spec:
  ports:
  - name: "10010"
    port: 10010
    targetPort: 10010
  selector:
    io.kompose.service: meshery-nginx-sm
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-nsm
  name: meshery-nsm
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-nsm
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-nsm
    spec:
      serviceAccount: meshery-server
      containers:
        - image: layer5/meshery-nsm:stable-latest
          imagePullPolicy: Always
          name: meshery-nsm
          ports:
            - containerPort: 10004
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-nsm
  name: meshery-nsm
spec:
  ports:
  - name: "10004"
    port: 10004
    targetPort: 10004
  selector:
    io.kompose.service: meshery-nsm
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery
  name: meshery
spec:
  ports:
  - name: "http"
    port: 9081
    targetPort: 8080
  selector:
    io.kompose.service: meshery
  type: LoadBalancer


---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-traefik-mesh
  name: meshery-traefik-mesh
spec:
  selector:
    matchLabels:
      io.kompose.service: meshery-traefik-mesh
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: meshery-traefik-mesh
    spec:
      serviceAccount: meshery-server
      containers:
      - image: layer5/meshery-traefik-mesh:stable-latest
        imagePullPolicy: Always
        name: meshery-traefik-mesh
        ports:
        - containerPort: 10006
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.32.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: meshery-traefik-mesh
  name: meshery-traefik-mesh
spec:
  ports:
  - name: "10000"
    port: 10006
    targetPort: 10006
  selector:
    io.kompose.service: meshery-traefik-mesh
status:
  loadBalancer: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: meshery-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: meshery-server
  labels:
    app: meshery
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs: ["/metrics", "/health", "/ping"]
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: meshery-server
  labels:
    app: meshery
roleRef:
  kind: ClusterRole
  name: meshery-server
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: meshery-server
  namespace: meshery
---
